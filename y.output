State 96 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: scope

    2 $@1: /* empty */

    3 $@2: /* empty */

    4 scope: '{' $@1 $@2 declarations statements '}'

    5 declarations: declarations declaration
    6             | /* empty */

    7 statements: statements statement
    8           | /* empty */

    9 declaration: type ID ';'
   10            | type ID '=' expression ';'
   11            | CONST type ID '=' expression ';'

   12 statement: variable '=' expression ';'
   13          | IF '(' expression ')' statement ELSE statement
   14          | IF '(' expression ')' statement
   15          | scope
   16          | ';'

   17 type: INT_T
   18     | IVEC_T
   19     | BOOL_T
   20     | BVEC_T
   21     | FLOAT_T
   22     | VEC_T

   23 expression: type '(' arguments_opt ')'
   24           | FUNC1 '(' arguments_opt ')'
   25           | FUNC2 '(' arguments_opt ')'
   26           | FUNC3 '(' arguments_opt ')'
   27           | '-' expression
   28           | '!' expression
   29           | expression AND expression
   30           | expression OR expression
   31           | expression EQ expression
   32           | expression NEQ expression
   33           | expression '<' expression
   34           | expression LEQ expression
   35           | expression '>' expression
   36           | expression GEQ expression
   37           | expression '+' expression
   38           | expression '-' expression
   39           | expression '*' expression
   40           | expression '/' expression
   41           | expression '^' expression
   42           | TRUE_C
   43           | FALSE_C
   44           | INT_C
   45           | FLOAT_C
   46           | '(' expression ')'
   47           | variable

   48 variable: ID
   49         | ID '[' INT_C ']'

   50 arguments: arguments ',' expression
   51          | expression

   52 arguments_opt: arguments
   53              | /* empty */


Terminals, with rules where they appear

$end (0) 0
'!' (33) 28
'(' (40) 13 14 23 24 25 26 46
')' (41) 13 14 23 24 25 26 46
'*' (42) 39
'+' (43) 37
',' (44) 50
'-' (45) 27 38
'/' (47) 40
';' (59) 9 10 11 12 16
'<' (60) 33
'=' (61) 10 11 12
'>' (62) 35
'[' (91) 49
']' (93) 49
'^' (94) 41
'{' (123) 4
'}' (125) 4
error (256)
FLOAT_T (258) 21
INT_T (259) 17
BOOL_T (260) 19
CONST (261) 11
FALSE_C (262) 43
TRUE_C (263) 42
FUNC1 (264) 24
FUNC2 (265) 25
FUNC3 (266) 26
IF (267) 13 14
ELSE (268) 13
AND (269) 29
OR (270) 30
NEQ (271) 32
EQ (272) 31
LEQ (273) 34
GEQ (274) 36
VEC_T (275) 22
BVEC_T (276) 20
IVEC_T (277) 18
FLOAT_C (278) 45
INT_C (279) 44 49
ID (280) 9 10 11 48 49
UMINUS (281)
WITHOUT_ELSE (282)
WITH_ELSE (283)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
scope (48)
    on left: 4, on right: 1 15
$@1 (49)
    on left: 2, on right: 4
$@2 (50)
    on left: 3, on right: 4
declarations (51)
    on left: 5 6, on right: 4 5
statements (52)
    on left: 7 8, on right: 4 7
declaration (53)
    on left: 9 10 11, on right: 5
statement (54)
    on left: 12 13 14 15 16, on right: 7 13 14
type (55)
    on left: 17 18 19 20 21 22, on right: 9 10 11 23
expression (56)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    41 42 43 44 45 46 47, on right: 10 11 12 13 14 27 28 29 30 31 32
    33 34 35 36 37 38 39 40 41 46 50 51
variable (57)
    on left: 48 49, on right: 12 47
arguments (58)
    on left: 50 51, on right: 50 52
arguments_opt (59)
    on left: 52 53, on right: 23 24 25 26


state 0

    0 $accept: . program $end

    '{'  shift, and go to state 1

    program  go to state 2
    scope    go to state 3


state 1

    4 scope: '{' . $@1 $@2 declarations statements '}'

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: scope .

    $default  reduce using rule 1 (program)


state 4

    4 scope: '{' $@1 . $@2 declarations statements '}'

    $default  reduce using rule 3 ($@2)

    $@2  go to state 6


state 5

    0 $accept: program $end .

    $default  accept


state 6

    4 scope: '{' $@1 $@2 . declarations statements '}'

    $default  reduce using rule 6 (declarations)

    declarations  go to state 7


state 7

    4 scope: '{' $@1 $@2 declarations . statements '}'
    5 declarations: declarations . declaration

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    CONST    shift, and go to state 11
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14

    $default  reduce using rule 8 (statements)

    statements   go to state 15
    declaration  go to state 16
    type         go to state 17


state 8

   21 type: FLOAT_T .

    $default  reduce using rule 21 (type)


state 9

   17 type: INT_T .

    $default  reduce using rule 17 (type)


state 10

   19 type: BOOL_T .

    $default  reduce using rule 19 (type)


state 11

   11 declaration: CONST . type ID '=' expression ';'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14

    type  go to state 18


state 12

   22 type: VEC_T .

    $default  reduce using rule 22 (type)


state 13

   20 type: BVEC_T .

    $default  reduce using rule 20 (type)


state 14

   18 type: IVEC_T .

    $default  reduce using rule 18 (type)


state 15

    4 scope: '{' $@1 $@2 declarations statements . '}'
    7 statements: statements . statement

    IF   shift, and go to state 19
    ID   shift, and go to state 20
    '{'  shift, and go to state 1
    '}'  shift, and go to state 21
    ';'  shift, and go to state 22

    scope      go to state 23
    statement  go to state 24
    variable   go to state 25


state 16

    5 declarations: declarations declaration .

    $default  reduce using rule 5 (declarations)


state 17

    9 declaration: type . ID ';'
   10            | type . ID '=' expression ';'

    ID  shift, and go to state 26


state 18

   11 declaration: CONST type . ID '=' expression ';'

    ID  shift, and go to state 27


state 19

   13 statement: IF . '(' expression ')' statement ELSE statement
   14          | IF . '(' expression ')' statement

    '('  shift, and go to state 28


state 20

   48 variable: ID .
   49         | ID . '[' INT_C ']'

    '['  shift, and go to state 29

    $default  reduce using rule 48 (variable)


state 21

    4 scope: '{' $@1 $@2 declarations statements '}' .

    $default  reduce using rule 4 (scope)


state 22

   16 statement: ';' .

    $default  reduce using rule 16 (statement)


state 23

   15 statement: scope .

    $default  reduce using rule 15 (statement)


state 24

    7 statements: statements statement .

    $default  reduce using rule 7 (statements)


state 25

   12 statement: variable . '=' expression ';'

    '='  shift, and go to state 30


state 26

    9 declaration: type ID . ';'
   10            | type ID . '=' expression ';'

    ';'  shift, and go to state 31
    '='  shift, and go to state 32


state 27

   11 declaration: CONST type ID . '=' expression ';'

    '='  shift, and go to state 33


state 28

   13 statement: IF '(' . expression ')' statement ELSE statement
   14          | IF '(' . expression ')' statement

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 45
    variable    go to state 46


state 29

   49 variable: ID '[' . INT_C ']'

    INT_C  shift, and go to state 47


state 30

   12 statement: variable '=' . expression ';'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 48
    variable    go to state 46


state 31

    9 declaration: type ID ';' .

    $default  reduce using rule 9 (declaration)


state 32

   10 declaration: type ID '=' . expression ';'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 49
    variable    go to state 46


state 33

   11 declaration: CONST type ID '=' . expression ';'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 50
    variable    go to state 46


state 34

   43 expression: FALSE_C .

    $default  reduce using rule 43 (expression)


state 35

   42 expression: TRUE_C .

    $default  reduce using rule 42 (expression)


state 36

   24 expression: FUNC1 . '(' arguments_opt ')'

    '('  shift, and go to state 51


state 37

   25 expression: FUNC2 . '(' arguments_opt ')'

    '('  shift, and go to state 52


state 38

   26 expression: FUNC3 . '(' arguments_opt ')'

    '('  shift, and go to state 53


state 39

   45 expression: FLOAT_C .

    $default  reduce using rule 45 (expression)


state 40

   44 expression: INT_C .

    $default  reduce using rule 44 (expression)


state 41

   27 expression: '-' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 54
    variable    go to state 46


state 42

   28 expression: '!' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 55
    variable    go to state 46


state 43

   46 expression: '(' . expression ')'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 56
    variable    go to state 46


state 44

   23 expression: type . '(' arguments_opt ')'

    '('  shift, and go to state 57


state 45

   13 statement: IF '(' expression . ')' statement ELSE statement
   14          | IF '(' expression . ')' statement
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70
    ')'  shift, and go to state 71


state 46

   47 expression: variable .

    $default  reduce using rule 47 (expression)


state 47

   49 variable: ID '[' INT_C . ']'

    ']'  shift, and go to state 72


state 48

   12 statement: variable '=' expression . ';'
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70
    ';'  shift, and go to state 73


state 49

   10 declaration: type ID '=' expression . ';'
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70
    ';'  shift, and go to state 74


state 50

   11 declaration: CONST type ID '=' expression . ';'
   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70
    ';'  shift, and go to state 75


state 51

   24 expression: FUNC1 '(' . arguments_opt ')'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    $default  reduce using rule 53 (arguments_opt)

    type           go to state 44
    expression     go to state 76
    variable       go to state 46
    arguments      go to state 77
    arguments_opt  go to state 78


state 52

   25 expression: FUNC2 '(' . arguments_opt ')'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    $default  reduce using rule 53 (arguments_opt)

    type           go to state 44
    expression     go to state 76
    variable       go to state 46
    arguments      go to state 77
    arguments_opt  go to state 79


state 53

   26 expression: FUNC3 '(' . arguments_opt ')'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    $default  reduce using rule 53 (arguments_opt)

    type           go to state 44
    expression     go to state 76
    variable       go to state 46
    arguments      go to state 77
    arguments_opt  go to state 80


state 54

   27 expression: '-' expression .
   29           | expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    $default  reduce using rule 27 (expression)


state 55

   28 expression: '!' expression .
   29           | expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    $default  reduce using rule 28 (expression)


state 56

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   46           | '(' expression . ')'

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70
    ')'  shift, and go to state 81


state 57

   23 expression: type '(' . arguments_opt ')'

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    $default  reduce using rule 53 (arguments_opt)

    type           go to state 44
    expression     go to state 76
    variable       go to state 46
    arguments      go to state 77
    arguments_opt  go to state 82


state 58

   29 expression: expression AND . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 83
    variable    go to state 46


state 59

   30 expression: expression OR . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 84
    variable    go to state 46


state 60

   32 expression: expression NEQ . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 85
    variable    go to state 46


state 61

   31 expression: expression EQ . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 86
    variable    go to state 46


state 62

   34 expression: expression LEQ . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 87
    variable    go to state 46


state 63

   36 expression: expression GEQ . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 88
    variable    go to state 46


state 64

   33 expression: expression '<' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 89
    variable    go to state 46


state 65

   35 expression: expression '>' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 90
    variable    go to state 46


state 66

   37 expression: expression '+' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 91
    variable    go to state 46


state 67

   38 expression: expression '-' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 92
    variable    go to state 46


state 68

   39 expression: expression '*' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 93
    variable    go to state 46


state 69

   40 expression: expression '/' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 94
    variable    go to state 46


state 70

   41 expression: expression '^' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 95
    variable    go to state 46


state 71

   13 statement: IF '(' expression ')' . statement ELSE statement
   14          | IF '(' expression ')' . statement

    IF   shift, and go to state 19
    ID   shift, and go to state 20
    '{'  shift, and go to state 1
    ';'  shift, and go to state 22

    scope      go to state 23
    statement  go to state 96
    variable   go to state 25


state 72

   49 variable: ID '[' INT_C ']' .

    $default  reduce using rule 49 (variable)


state 73

   12 statement: variable '=' expression ';' .

    $default  reduce using rule 12 (statement)


state 74

   10 declaration: type ID '=' expression ';' .

    $default  reduce using rule 10 (declaration)


state 75

   11 declaration: CONST type ID '=' expression ';' .

    $default  reduce using rule 11 (declaration)


state 76

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   51 arguments: expression .

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 51 (arguments)


state 77

   50 arguments: arguments . ',' expression
   52 arguments_opt: arguments .

    ','  shift, and go to state 97

    $default  reduce using rule 52 (arguments_opt)


state 78

   24 expression: FUNC1 '(' arguments_opt . ')'

    ')'  shift, and go to state 98


state 79

   25 expression: FUNC2 '(' arguments_opt . ')'

    ')'  shift, and go to state 99


state 80

   26 expression: FUNC3 '(' arguments_opt . ')'

    ')'  shift, and go to state 100


state 81

   46 expression: '(' expression ')' .

    $default  reduce using rule 46 (expression)


state 82

   23 expression: type '(' arguments_opt . ')'

    ')'  shift, and go to state 101


state 83

   29 expression: expression . AND expression
   29           | expression AND expression .
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 29 (expression)


state 84

   29 expression: expression . AND expression
   30           | expression . OR expression
   30           | expression OR expression .
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    AND  shift, and go to state 58
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 30 (expression)


state 85

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   32           | expression NEQ expression .
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 32 (expression)


state 86

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   31           | expression EQ expression .
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 31 (expression)


state 87

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   34           | expression LEQ expression .
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 34 (expression)


state 88

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   36           | expression GEQ expression .
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 36 (expression)


state 89

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   33           | expression '<' expression .
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 33 (expression)


state 90

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   35           | expression '>' expression .
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 35 (expression)


state 91

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   37           | expression '+' expression .
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 37 (expression)


state 92

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   38           | expression '-' expression .
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression

    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 38 (expression)


state 93

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   39           | expression '*' expression .
   40           | expression . '/' expression
   41           | expression . '^' expression

    '^'  shift, and go to state 70

    $default  reduce using rule 39 (expression)


state 94

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   40           | expression '/' expression .
   41           | expression . '^' expression

    '^'  shift, and go to state 70

    $default  reduce using rule 40 (expression)


state 95

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   41           | expression '^' expression .

    '^'  shift, and go to state 70

    $default  reduce using rule 41 (expression)


state 96

   13 statement: IF '(' expression ')' statement . ELSE statement
   14          | IF '(' expression ')' statement .

    ELSE  shift, and go to state 102

    ELSE      [reduce using rule 14 (statement)]
    $default  reduce using rule 14 (statement)


state 97

   50 arguments: arguments ',' . expression

    FLOAT_T  shift, and go to state 8
    INT_T    shift, and go to state 9
    BOOL_T   shift, and go to state 10
    FALSE_C  shift, and go to state 34
    TRUE_C   shift, and go to state 35
    FUNC1    shift, and go to state 36
    FUNC2    shift, and go to state 37
    FUNC3    shift, and go to state 38
    VEC_T    shift, and go to state 12
    BVEC_T   shift, and go to state 13
    IVEC_T   shift, and go to state 14
    FLOAT_C  shift, and go to state 39
    INT_C    shift, and go to state 40
    ID       shift, and go to state 20
    '-'      shift, and go to state 41
    '!'      shift, and go to state 42
    '('      shift, and go to state 43

    type        go to state 44
    expression  go to state 103
    variable    go to state 46


state 98

   24 expression: FUNC1 '(' arguments_opt ')' .

    $default  reduce using rule 24 (expression)


state 99

   25 expression: FUNC2 '(' arguments_opt ')' .

    $default  reduce using rule 25 (expression)


state 100

   26 expression: FUNC3 '(' arguments_opt ')' .

    $default  reduce using rule 26 (expression)


state 101

   23 expression: type '(' arguments_opt ')' .

    $default  reduce using rule 23 (expression)


state 102

   13 statement: IF '(' expression ')' statement ELSE . statement

    IF   shift, and go to state 19
    ID   shift, and go to state 20
    '{'  shift, and go to state 1
    ';'  shift, and go to state 22

    scope      go to state 23
    statement  go to state 104
    variable   go to state 25


state 103

   29 expression: expression . AND expression
   30           | expression . OR expression
   31           | expression . EQ expression
   32           | expression . NEQ expression
   33           | expression . '<' expression
   34           | expression . LEQ expression
   35           | expression . '>' expression
   36           | expression . GEQ expression
   37           | expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '^' expression
   50 arguments: arguments ',' expression .

    AND  shift, and go to state 58
    OR   shift, and go to state 59
    NEQ  shift, and go to state 60
    EQ   shift, and go to state 61
    LEQ  shift, and go to state 62
    GEQ  shift, and go to state 63
    '<'  shift, and go to state 64
    '>'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '^'  shift, and go to state 70

    $default  reduce using rule 50 (arguments)


state 104

   13 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 13 (statement)
